apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-replica
spec:
  serviceName: "postgres-replica"
  replicas: 2
  selector:
    matchLabels:
      app: postgres-replica
  template:
    metadata:
      labels:
        app: postgres-replica
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
      - name: init-chmod-data
        image: busybox
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        command: 
        - sh
        - -c
        - |
          mkdir -p /var/lib/postgresql/data/pgdata &&
          chmod 700 /var/lib/postgresql/data/pgdata &&
          chown -R 999:999 /var/lib/postgresql/data
        volumeMounts:
        - name: postgres-replica-storage
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgres
        image: postgres:14
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 999
          runAsGroup: 999
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: "ualflix"
        - name: POSTGRES_PASSWORD
          value: "senha123"
        - name: POSTGRES_DB
          value: "catalogdb"
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "trust"
        command: ["/bin/sh", "-c"]
        args:
          - |
            rm -rf /var/lib/postgresql/data/pgdata/* &&
            echo "Waiting for primary postgres to be ready..." &&
            until psql -h postgres -U "${POSTGRES_USER}" -d "${POSTGRES_DB}" -c '\q' > /dev/null 2>&1; do
              echo "Primary is not ready yet, sleeping for 5s..."
              sleep 5;
            done &&
            echo "Primary is ready. Starting replication..." &&
            PGPASSWORD="${POSTGRES_PASSWORD}" pg_basebackup -h postgres -p 5432 -D /var/lib/postgresql/data/pgdata -U "${POSTGRES_USER}" -X stream -P -w &&
            echo "standby_mode = 'on'" > /var/lib/postgresql/data/pgdata/standby.signal &&
            echo "primary_conninfo = 'host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}'" >> /var/lib/postgresql/data/pgdata/standby.signal &&
            echo "hot_standby = on" >> /var/lib/postgresql/data/pgdata/postgresql.conf &&
            exec postgres
        volumeMounts:
        - name: postgres-replica-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-replica-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-replica
spec:
  ports:
  - port: 5432
  selector:
    app: postgres-replica
  type: ClusterIP 